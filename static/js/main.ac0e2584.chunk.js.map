{"version":3,"sources":["data/axios.js","functions/hyphenOrContent/hyphenOrContent.js","data/actions/api.js","components/Home/Login.js","data/actions/state.js","components/Home/Register.js","components/Loading.js","components/Dashboard.js","components/PrivateRoute.js","components/Button.js","components/Dialogues/AboutDialogue.js","components/Header.js","components/Dialogues/ResetMoviesDialogue.js","components/Dialogues/AlertDialogue.js","components/MovieFormInput.js","components/Dialogues/MovieFormDialogue.js","components/MyMovies.js","components/FilterGroup.js","components/Dialogues/PickedMovieDialogue/PickedMovieDialogue.js","components/Dialogues/PickedMovieDialogue/index.js","components/Dialogues/NoMoviesDialogue.js","components/MoviePicker/MoviePicker.js","functions/randomFilteredMovie.js","components/MoviePicker/index.js","components/FourOhFour.js","components/App.js","data/reducers/MovieReducer.js","data/reducers/AuthReducer.js","data/reducers/RootReducer.js","data/store.js","index.js"],"names":["axios","create","baseURL","headers","Accept","hyphenOrContent","movie","Object","fromEntries","entries","map","key","val","token","localStorage","getItem","initialState","email","password","loginReducer","state","action","type","payload","field","value","Login","history","useReducer","dispatch","dispatchAction","useDispatch","authResponse","useSelector","auth","useEffect","handleChange","e","currentTarget","id","className","onSubmit","preventDefault","credentials","length","post","then","res","user","data","success","setItem","userObj","firstname","lastname","setTimeout","push","loginUser","onChange","placeholder","to","registerReducer","Register","target","error","registerUser","Loading","class","Dashboard","loaded","meSpan","useRef","movieSpan","w","e1","l","c","o","m","e2","comma","name","get","Authorization","movies","TweenMax","opacity","y","ease","Power3","easeOut","delay","x","classes","makeStyles","logoutBtn","position","top","left","useStyles","onClick","removeItem","ref","el","PrivateRoute","Component","component","rest","render","props","pathname","from","location","Button","children","AboutDialogue","handleAboutClose","aboutDialogueOpen","paper","backgroundColor","paddingNone","padding","Dialog","open","onClose","DialogContent","Paper","elevation","DialogActions","Header","useState","setOpen","fontSize44","fontSize","ResetMoviesDialogue","handleClose","handleReset","AlertDialogue","dialogueHeading","dialogueContent","MovieFormInput","label","faIcon","marginBottom","FormControl","InputLabel","htmlFor","Input","movieFormReducer","fieldName","warningDialogueOpen","movieTitle","movieGenre","movieDirector","movieCast","movieWatched","MovieFormDialogue","handleMovieFormClose","movieFormDialogueOpen","handleSubmit","returnedMovie","addNewMovie","arrow","transition","marginLeft","font5","MyMovies","movieFormOpen","setMovieFormOpen","resetWarningOpen","setResetWarningOpen","handleUpdateMovie","put","updateSingleMovie","updateMovie","handleDeleteMovie","delete","removeMovie","tableIcons","Add","forwardRef","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","title","rowData","columns","Container","width","icons","editable","onRowUpdate","newMovie","oldMovies","Promise","resolve","onRowDelete","options","actionsColumnIndex","headerStyle","textAlign","whiteSpace","rowStyle","fontFamily","cellStyle","FilterGroup","heading","filtersNoDuplicates","showFilters","setShowFilters","rotateChevron","setRotateChevron","roboto","rotateChev","transform","flexColumn","flexDirection","Collapse","in","filter","i","PickedMovieDialogue","pickedMovie","berp","justifyContent","root","connect","NoMoviesDialogue","MoviePicker","filters","movieDialogueOpen","bind","handlePickMovie","handleMovieDialogueOpen","handleMovieDialogueClose","handleWarningDialogueOpen","handleWarningDialogueClose","this","setState","filterItem","indexOf","bool","filteredMovies","reduce","acc","values","some","includes","split","star","Math","floor","random","randomFilteredMovie","handlePickedMovie","undefined","directorsNoDuplicates","Set","director","genresNoDuplicates","genre","castNoDuplicates","flat","cast","overflowX","spaceAround","handleWatched","withStyles","FourOhFour","h1","App","exact","path","RootReducer","combineReducers","message","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac0e2584.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"http://homestead.test/api/\",\n    headers: {\n        Accept: \"application/json\",\n    },\n});","const hyphenOrContent = movie => Object.fromEntries(\n    Object.entries(movie).map(\n        ([key, val]) => ([key, val === null ? \"-\" : val])\n    )\n);\n\nexport default hyphenOrContent","import axios from \"../axios\";\nimport hyphenOrContent from '../../functions/hyphenOrContent/hyphenOrContent'\nimport {\n    saveMovies,\n    addNewMovie,\n    updateSingleMovie,\n    clearMovies,\n    removeMovie\n} from \"./state\";\nconst token = localStorage.getItem('user')\n\n// register user\nexport const registerUser = (credentials, history) => dispatch => {\n    dispatch({ type: 'RESTART_AUTH_RESPONSE' });\n    dispatch({ type: 'LOADING' });\n    if (credentials.password < 6) {\n        return dispatch({ type: 'SHORT_PASSWORD' })\n    }\n    axios.post(\"user/register\", credentials).then(res => {\n        const { token } = res.data;\n        if (token !== null) {\n            localStorage.setItem(\"user\", 'Bearer ' + token);\n            dispatch({ type: 'SIGNUP_SUCCESS', payload: res.data })\n            setTimeout(() => {\n                history.push(\"/dashboard\");\n            }, 1000);\n        } else {\n            dispatch({ type: 'SIGNUP_ERROR', res })\n        }\n    }, error => {\n        dispatch({ type: 'CODE_ERROR', error });\n    });\n}\n\n// login user\nexport const loginUser = (credentials, history) => dispatch => {\n    dispatch({ type: 'RESTART_AUTH_RESPONSE' });\n    dispatch({ type: 'LOADING' });\n    if (credentials.password.length < 6) {\n        return dispatch({ type: 'SHORT_PASSWORD' })\n    }\n    axios.post(\"user/login\", {\n        email: credentials.email,\n        password: credentials.password\n    }).then(res => {\n        const { data: user, data: { success } } = res;\n        localStorage.setItem('user', 'Bearer ' + user.token)\n        if (success) {\n            const userObj = {\n                token: user.token,\n                id: user.id,\n                firstname: user.firstname,\n                lastname: user.lastname,\n                email: user.email\n            }\n            dispatch({ type: 'LOGIN_SUCCESS', payload: userObj })\n            setTimeout(() => {\n                history.push(\"/dashboard\");\n            }, 1000);\n        }\n        else {\n            dispatch({ type: 'LOGIN_ERROR', res })\n        }\n    })\n}\n\n// get movies specific to logged in user\nexport const getMovies = () => dispatch => {\n    const token = localStorage.getItem('user')\n    axios.get(`user/movies`, {\n        headers: {\n            Authorization: token\n        }\n    }).then(res => {\n        let movies = res.data.data.map(movie => hyphenOrContent(movie))\n        dispatch(saveMovies(movies));\n    });\n}\n\n// add movie specific to a user\nexport const submitNewMovie = data => dispatch => {\n    axios.post(`user/movies`, data, {\n        headers: {\n            'Authorization': token\n        }\n    }).then(data => {\n        const { data: returnedMovie } = data.data;\n        dispatch(addNewMovie(hyphenOrContent(returnedMovie)))\n    });\n}\n\n// add movie specific to a user\nexport const updateMovie = data => dispatch => {\n    const { id } = data\n    const token = localStorage.getItem('user')\n    axios.put(`user/movies/${id}`, data, {\n        headers: {\n            'Authorization': token\n        }\n    }).then(data => {\n        dispatch(updateSingleMovie(data.data.data))\n    });\n}\n\n// delete movie specific to a user\nexport const deleteMovie = data => dispatch => {\n    const id = data\n    axios.delete(`user/movies/${id}`, {\n        headers: {\n            'Authorization': token\n        }\n    }).then(() => {\n        dispatch(removeMovie(id))\n    });\n}\n\n// reset specific user's movies\nexport const resetMovies = () => dispatch => {\n    axios.delete(`user/movies`, {\n        headers: {\n            'Authorization': token\n        }\n    }).then(() => {\n        dispatch(clearMovies())\n    });\n}","import React, { useReducer, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { resetAuthResponse } from '../../data/actions/state';\nimport { loginUser } from '../../data/actions/api';\n\nconst initialState = {\n    email: \"\",\n    password: \"\"\n}\n\nconst loginReducer = (state, action) => {\n    switch (action.type) {\n        case 'onChange':\n            return {\n                ...state,\n                [action.payload.field]: action.payload.value\n            }\n        default: return;\n    }\n}\n\nconst Login = ({ history }) => {\n    const [state, dispatch] = useReducer(loginReducer, initialState);\n\n    const dispatchAction = useDispatch();\n\n    const authResponse = useSelector(state => state.auth.authResponse)\n\n    useEffect(() => {\n        dispatchAction(resetAuthResponse());\n    }, []);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatchAction(loginUser(state, history));\n    }\n\n    const handleChange = (e) => {\n        dispatch({\n            type: \"onChange\",\n            payload: {\n                field: e.currentTarget.id,\n                value: e.currentTarget.value\n            }\n        })\n    }\n\n    return (\n        <div className=\"authform\">\n            <div className=\"authform__background-blue\"></div>\n            <div className=\"authform__contents-login mb-1\">\n                <header className=\"authform__header-login\">\n                    <h1 className=\"authform__h1-login\"> <span className=\"authform__h1-me\">Me</span>Movie </h1>\n                    <h3 className=\"authform__sub-heading-login\">Your personalised movie hub</h3>\n                    <h3 className=\"authform__login-h3\">Login</h3>\n                </header>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"authform__inputs-container-login\">\n                        <input\n                            onChange={handleChange}\n                            id=\"email\" type=\"text\"\n                            placeholder=\"email\"\n                        />\n                        <input\n                            onChange={handleChange}\n                            id=\"password\"\n                            type=\"password\"\n                            placeholder=\"password\"\n                        />\n                    </div>\n                    <button type=\"submit\" className={\"authform__btn\" + (authResponse ? \" authform__btn-mb\" : \"\")}>Login</button>\n                </form>\n            </div>\n            <footer className=\"authform__footer\">\n                {authResponse !== null ?\n                    (<p className=\"authform__message\">{authResponse}</p>)\n                    :\n                    null\n                }\n                <p className=\"authform__switch-form\">New to MeMovie? Register <strong ><Link\n                    className=\"authform__switch-form-red\" to=\"/register\">here</Link></strong></p>\n            </footer>\n        </div>\n    );\n};\n\nexport default Login;","export const saveMovies = data => {\n    return ({\n        type: \"SAVE_MOVIES\",\n        payload: data\n    })\n}\n\nexport const addNewMovie = data => {\n    return ({\n        type: \"ADD_MOVIE\",\n        payload: data\n    })\n}\n\nexport const removeMovie = id => ({\n    type: \"REMOVE_MOVIE\",\n    payload: id\n})\n\nexport const updateSingleMovie = data => ({\n    type: \"UPDATE_MOVIE\",\n    payload: data,\n})\n\nexport const clearMovies = () => ({\n    type: \"RESET_MOVIES\"\n})\n\nexport const savePickedMovie = data => ({\n    type: \"SAVE_PICKED_MOVIE\",\n    payload: data\n})\n\nexport const logoutUser = () => ({\n    type: \"LOGOUT_USER\"\n})\n\nexport const resetAuthResponse = () => ({\n    type: 'RESTART_AUTH_RESPONSE'\n});\n","import React, { useEffect, useReducer } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { registerUser } from '../../data/actions/api';\nimport { resetAuthResponse } from '../../data/actions/state';\n\nconst initialState = {\n    email: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    password: \"\"\n}\n\nconst registerReducer = (state, action) => {\n    switch (action.type) {\n        case 'onChange':\n            return {\n                ...state,\n                [action.payload.field]: action.payload.value\n            }\n        default: return;\n    }\n}\n\nconst Register = ({ history }) => {\n    const [state, dispatch] = useReducer(registerReducer, initialState);\n\n    const dispatchAction = useDispatch();\n\n    const authResponse = useSelector(state => state.auth.authResponse)\n\n    useEffect(() => {\n        dispatchAction(resetAuthResponse());\n    }, []);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatchAction(registerUser(state, history));\n    }\n\n    const handleChange = e => {\n        dispatch({\n            type: \"onChange\",\n            payload: {\n                field: e.target.id,\n                value: e.currentTarget.value\n            }\n        })\n    }\n\n    return (\n        <div className=\"authform\">\n            <div className=\"authform__background-blue\"></div>\n            <div className=\"authform__contents\">\n                <header className=\"authform__header-register\" >\n                    <h1 className=\"authform__h1\"> <span className=\"authform__h1-me\">Me</span>Movie </h1>\n                    <h3 className=\"authform__sub-heading\">Register</h3>\n                </header>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"authform__inputs-container\">\n                        <input\n                            onChange={handleChange}\n                            id=\"firstname\"\n                            type=\"text\"\n                            placeholder=\"first name\"\n                        />\n                        <input\n                            onChange={handleChange}\n                            id=\"lastname\"\n                            type=\"text\"\n                            placeholder=\"last name\"\n                        />\n                        <input\n                            onChange={handleChange}\n                            id=\"email\"\n                            type=\"email\"\n                            placeholder=\"email\"\n                        />\n                        <input\n                            onChange={handleChange}\n                            id=\"password\"\n                            type=\"password\"\n                            placeholder=\"password (at least 6 characters)\"\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"authform__btn\">Register</button>\n                </form>\n            </div>\n            <footer className=\"authform__footer\">\n                {authResponse !== null ?\n                    (<p className=\"authform__message\">{authResponse}</p>)\n                    :\n                    null\n                }\n                <p className=\"authform__switch-form\">Already have an account? Login <strong ><Link\n                    className=\"authform__switch-form-red\" to=\"/\">here</Link></strong></p>\n            </footer>\n        </div>\n    )\n}\n\nexport default Register;","import React from 'react'\n\nconst Loading = () => (\n    <div className=\"background-image\">\n        <div className=\"dshbrd__container\">\n            <div class=\"loading-ring\"><div></div><div></div><div></div><div></div></div>\n        </div>\n    </div>\n);\n\nexport default Loading;","import React, { useRef, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { clearMovies } from '../data/actions/state'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { TweenMax, Power3 } from 'gsap'\nimport { getMovies } from '../data/actions/api'\nimport Loading from './Loading'\n\nconst Dashboard = () => {\n    const user = useSelector(state => state.auth.user)\n    const loaded = useSelector(state => state.movie.loaded)\n    const dispatchAction = useDispatch()\n\n    // variables storing elements that will be animated\n    let meSpan = useRef(null)\n    let movieSpan = useRef(null)\n    let w = useRef(null)\n    let e1 = useRef(null)\n    let l = useRef(null)\n    let c = useRef(null)\n    let o = useRef(null)\n    let m = useRef(null)\n    let e2 = useRef(null)\n    let comma = useRef(null)\n    let name = useRef(null)\n\n    // get movies and animate text when component renders\n    useEffect(() => {\n        dispatchAction(getMovies(user))\n        TweenMax.to(\n            meSpan,\n            2,\n            {\n                opacity: 1,\n                y: 0,\n                ease: Power3.easeOut\n            }\n        )\n        TweenMax.to(\n            movieSpan,\n            2,\n            {\n                opacity: 1,\n                y: 0,\n                ease: Power3.easeOut,\n                delay: .3\n            }\n        )\n        TweenMax.to(\n            w,\n            2,\n            {\n                opacity: 1,\n                x: 0,\n                ease: Power3.easeOut,\n                delay: .4\n            }\n        )\n        TweenMax.to(\n            e1,\n            2,\n            {\n                opacity: 1,\n                x: 0,\n                ease: Power3.easeOut,\n                delay: .6\n            }\n        )\n        TweenMax.to(\n            l,\n            2,\n            {\n                opacity: 1,\n                x: 0,\n                ease: Power3.easeOut,\n                delay: .8\n            }\n        )\n        TweenMax.to(\n            c,\n            2,\n            {\n                opacity: 1,\n                x: 0,\n                ease: Power3.easeOut,\n                delay: 1\n            }\n        )\n        TweenMax.to(\n            o,\n            2,\n            {\n                opacity: 1,\n                x: 0,\n                ease: Power3.easeOut,\n                delay: 1.2\n            }\n        )\n        TweenMax.to(\n            m,\n            2,\n            {\n                opacity: 1,\n                x: 0,\n                ease: Power3.easeOut,\n                delay: 1.4\n            }\n        )\n        TweenMax.to(\n            e2,\n            2,\n            {\n                opacity: 1,\n                x: 0,\n                ease: Power3.easeOut,\n                delay: 1.6\n            }\n        )\n        TweenMax.to(\n            comma,\n            2,\n            {\n                opacity: 1,\n                x: 0,\n                ease: Power3.easeOut,\n                delay: 1.8\n            }\n        )\n        TweenMax.to(\n            name,\n            5,\n            {\n                opacity: 1,\n                ease: Power3.easeOut,\n                delay: 2.6\n            }\n        )\n    }\n        , [])\n\n    // logs user out and resets global state\n    const handleLogout = () => {\n        dispatchAction(clearMovies())\n        localStorage.removeItem('user')\n    };\n\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        logoutBtn: {\n            position: \"absolute\",\n            top: \"2rem\",\n            left: \"2rem\"\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles()\n\n    return !loaded ? <Loading /> : (\n        <div className=\"background-image\">\n            <div className=\"dshbrd__container\">\n                <Link\n                    onClick={handleLogout}\n                    className={\"btn header__logout \" + classes.logoutBtn}\n                    to=\"/home/login\"\n                >Logout\n            </Link>\n                <div className=\"dshbrd__title-container\">\n                    <h2\n                        ref={el => { meSpan = el }}\n                        className=\"dshbrd__heading dshbrd__heading-blue\"\n                    >Me\n                    </h2>\n                    <h2\n                        ref={el => { movieSpan = el }}\n                        className=\"dshbrd__heading\"\n                    >Movie\n                    </h2>\n                </div>\n                <p className=\"dshbrd__welcome\">\n                    <span ref={el => { w = el }}>W</span>\n                    <span ref={el => { e1 = el }}>e</span>\n                    <span ref={el => { l = el }}>l</span>\n                    <span ref={el => { c = el }}>c</span>\n                    <span ref={el => { o = el }}>o</span>\n                    <span ref={el => { m = el }}>m</span>\n                    <span ref={el => { e2 = el }}>e</span>\n                    <span ref={el => { comma = el }}>,</span>\n                    &nbsp;\n                    <span ref={el => { name = el }}>{user.firstname}</span>\n                    !</p>\n                <nav className=\"dshbrd__btn-group\">\n                    <Link className=\"btn dshbrd__btn\" to=\"/moviepicker\">Pick me a movie!</Link>\n                    <Link className=\"btn dshbrd__btn\" to=\"/mymovies\" >My Movies</Link>\n                </nav>\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom'\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n    const token = localStorage.getItem('user')\n    return (\n        <Route {...rest} render={props => (\n            token ?\n                <Component {...props} />\n                : <Redirect to={{ pathname: '/home', state: { from: props.location } }} />\n\n        )} />\n    )\n}","import React from 'react';\n\nconst Button = ({ className, onClick, children }) => (\n    <button\n        className={className}\n        onClick={onClick}\n    >{children}\n    </button>\n);\n\nexport default Button;","import React from 'react';\nimport Button from '../Button';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst AboutDialogue = ({ handleAboutClose, aboutDialogueOpen }) => {\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        paper: {\n            backgroundColor: \"#cfe8fc\",\n        },\n        paddingNone: {\n            padding: \"0\"\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={aboutDialogueOpen}\n            onClose={handleAboutClose}\n        >\n            <div className=\"dialogue__container\">\n                <h1 className=\"dialogue__heading\">About MeMovie</h1>\n                <DialogContent>\n                    <Paper\n                        className={classes.paper + \" paper\"}\n                        elevation={3}\n                    >\n                        <p>MeMovie removes the hours spent staring at Netflix, perplexed at how there can be so many films that you don't want to spend your evening watching.</p><br />\n\n                        <p>With MeMovie, when you hear about a film you would like to see, simply enter at least the title (you can also enter the director, genre and who it stars), and it will be added to your table of movies. When you want to watch one, simply pick from the table, or use the pick movie feature, which will pick you a random movie only from your table.</p><br />\n\n                        <p>You are able to use filters when picking, so if you want ie a random horror movie, providing you have added some movies with horror as their genre, check the horror filter and you will be picked a random horror movie.</p><br />\n\n                        <p>Happy watching!</p>\n                    </Paper>\n                </DialogContent>\n                <DialogActions className={classes.paddingNone}>\n                    <Button\n                        className=\"btn\"\n                        onClick={handleAboutClose}>Back\n                </Button>\n                </DialogActions>\n            </div>\n        </Dialog>\n    );\n};\n\nexport default AboutDialogue;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport Button from './Button';\nimport AboutDialogue from './Dialogues/AboutDialogue';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MovieIcon from '@material-ui/icons/Movie';\nimport { clearMovies, logoutUser } from '../data/actions/state';\n\nconst Header = ({ children }) => {\n    const [open, setOpen] = useState(false);\n    const dispatchAction = useDispatch()\n\n    // handles opening the add movie form dialogue\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    // logs user out and resets global state\n    const handleLogout = () => {\n        dispatchAction(clearMovies(), logoutUser())\n        localStorage.removeItem('user')\n    };\n\n    // handles closing the add movie form dialogue\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        fontSize44: {\n            fontSize: 44\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <header className=\"header\">\n            <div className=\"header__icon-container\">\n                <Link\n                    className=\"header__icon-home\"\n                    to=\"/dashboard\"\n                ><MovieIcon className={classes.fontSize44} />\n                </Link>\n                <Link\n                    onClick={handleLogout}\n                    className=\"btn header__logout\"\n                    to=\"/home/login\"\n                >Logout\n                </Link>\n            </div>\n            <h1 className=\"header__h1\" >{children}</h1>\n            <nav className=\"header__nav\">\n                <Link className=\"btn\" to=\"moviepicker\">Movie Picker</Link>\n                <i className=\"fas fa-circle\"></i>\n                <Link className=\"btn\" to=\"mymovies\">My Movies</Link>\n                <i className=\"fas fa-circle\"></i>\n                <AboutDialogue handleAboutClose={handleClose} aboutDialogueOpen={open} />\n                <Button\n                    className=\"btn\"\n                    onClick={handleClickOpen}\n                >About\n                    </Button>\n            </nav>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport Button from '../Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst ResetMoviesDialogue = ({ open, handleClose, handleReset }) => {\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        paper: {\n            backgroundColor: \"rgba(255, 191, 102, 0.9)\",\n        },\n        paddingNone: {\n            padding: \"0\"\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n        >\n            <div className=\"dialogue__container\">\n                <h1 className=\"dialogue__heading\">Reset your movies?</h1>\n                <DialogContent>\n                    <Paper className={classes.paper + \" paper\"}\n                        elevation={3}>\n                        <div className=\"flex-align-center dialogue__content-alert\">\n                            <ReportProblemOutlinedIcon />\n                            <p>This will clear the table and you will have to start over</p>\n                        </div>\n                    </Paper>\n                </DialogContent>\n                <DialogActions className={classes.paddingNone}>\n                    <div className=\"center\">\n                        <Button\n                            className=\"btn\"\n                            onClick={handleClose}>Back\n                    </Button>\n                        <Button\n                            className=\"btn\"\n                            onClick={handleReset}>Reset\n                    </Button>\n                    </div>\n                </DialogActions>\n            </div>\n        </Dialog>\n    );\n};\n\nexport default ResetMoviesDialogue;","import React from 'react';\nimport Button from '../Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst AlertDialogue = ({ open, handleClose, dialogueHeading, dialogueContent }) => {\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        paper: {\n            backgroundColor: \"rgba(255, 191, 102, 0.9)\",\n        },\n        paddingNone: {\n            padding: \"0\"\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n        >\n            <div className=\"dialogue__container\">\n                <h1 className=\"dialogue__heading\">{dialogueHeading}</h1>\n                <DialogContent>\n                    <Paper\n                        className={classes.paper + \" paper\"}\n                        elevation={3}\n                    >\n                        <div className=\"flex-align-center dialogue__content-alert\">\n                            <ReportProblemOutlinedIcon />\n                            <p>{dialogueContent}</p>\n                        </div>\n                    </Paper>\n                </DialogContent>\n                <DialogActions className={classes.paddingNone}>\n                    <Button className=\"btn\" onClick={handleClose}>Ok</Button>\n                </DialogActions>\n            </div>\n        </Dialog >\n    );\n};\n\nexport default AlertDialogue;","import React from 'react';\nimport { FormControl, InputLabel, Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst MovieFormInput = ({ value, label, onChange, id, faIcon }) => {\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        marginBottom: {\n            marginBottom: \"1rem\"\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <FormControl>\n            <InputLabel htmlFor={id}>{label}<i className={faIcon}></i></InputLabel>\n            <Input\n                className={classes.marginBottom}\n                id={id}\n                value={value}\n                onChange={onChange}\n            />\n        </FormControl>\n    );\n};\n\nexport default MovieFormInput;","import React, { useReducer } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { submitNewMovie } from '../../data/actions/api';\nimport Button from '../Button';\nimport Paper from '@material-ui/core/Paper';\nimport AlertDialogue from './AlertDialogue';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport MovieFormInput from '../MovieFormInput';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// mui's makestyles hook, allows for custom classnames in material ui components\nconst useStyles = makeStyles({\n    paper: {\n        backgroundColor: \"#cfe8fc\",\n        padding: \"1rem 1.5rem\",\n        marginBottom: \"1rem\",\n    }\n});\n\n// local reducer that handles updating local state properties (initialised in the initialState variable below)\nconst movieFormReducer = (state, action) => {\n    switch (action.type) {\n        case 'fieldNameChange':\n            return {\n                ...state,\n                movie: {\n                    ...state.movie,\n                    [action.payload.fieldName]: action.payload.value\n                }\n            }\n        case 'warningDialogueOpen':\n            return {\n                warningDialogueOpen: true\n            }\n        case 'warningDialogueClose':\n            return {\n                ...state,\n                warningDialogueOpen: false\n            }\n        case 'resetForm':\n            return {\n                ...state,\n                movie: {\n                    movieTitle: \"\",\n                    movieGenre: \"\",\n                    movieDirector: \"\",\n                    movieCast: \"\",\n                    movieWatched: false,\n                }\n            }\n        default: return;\n    }\n}\n\n// initial state of component\nconst initialState = {\n    movie: {\n        movieTitle: \"\",\n        movieGenre: \"\",\n        movieDirector: \"\",\n        movieCast: \"\",\n        movieWatched: false,\n    },\n    warningDialogueOpen: false\n}\n\nconst MovieFormDialogue = ({ handleMovieFormClose, movieFormDialogueOpen }) => {\n    const [state, dispatch] = useReducer(movieFormReducer, initialState);\n    const {\n        movie: {\n            movieTitle,\n            movieGenre,\n            movieDirector,\n            movieCast\n        },\n        warningDialogueOpen\n    } = state;\n    const dispatchAction = useDispatch();\n\n    // handles closing warning dialogue\n    const handleWarningDialogueClose = () => {\n        dispatch({ type: \"warningDialogueClose\" })\n    };\n\n    // handles form submission\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        const { movie } = state;\n\n        // if user hasn't entered a movie title, warning dialogue shows informing them that they must\n        if (movie.movieTitle === \"\") {\n            dispatch({ type: \"warningDialogueOpen\" })\n        } else {\n            // dispatches user's form entries to reducer\n            dispatchAction(submitNewMovie(movie));\n\n            // resets form after submission\n            dispatch({ type: \"resetForm\" })\n\n            // closes dialogue once form is submitted\n            handleMovieFormClose()\n        }\n    }\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={movieFormDialogueOpen}\n            onClose={handleMovieFormClose}\n        >\n            <AlertDialogue\n                handleClose={handleWarningDialogueClose}\n                open={warningDialogueOpen}\n                dialogueHeading=\"No movie title\"\n                dialogueContent=\"Please enter a movie title to add a movie\"\n            />\n            <DialogContent>\n                <h1 className=\"center mf__h1\">Add a movie:</h1>\n                <Paper\n                    className={classes.paper}\n                    elevation={3}\n                >\n                    <form\n                        onSubmit={handleSubmit}\n                        className=\"mf__form\"\n                    >\n                        <MovieFormInput\n                            label=\"Movie title\"\n                            faIcon=\"fas fa-asterisk fa-1x mf-asterisk\"\n                            id=\"title\"\n                            value={movieTitle}\n                            onChange={e => dispatch({\n                                type: 'fieldNameChange',\n                                payload: {\n                                    fieldName: 'movieTitle',\n                                    value: e.currentTarget.value,\n                                }\n                            })}\n                        />\n\n                        <MovieFormInput\n                            label=\"Movie director\"\n                            id=\"director\"\n                            value={movieDirector}\n                            onChange={e => dispatch({\n                                type: 'fieldNameChange',\n                                payload: {\n                                    fieldName: 'movieDirector',\n                                    value: e.currentTarget.value,\n                                }\n                            })}\n                        />\n\n                        <MovieFormInput\n                            label=\"Movie genre\"\n                            id=\"genre\"\n                            value={movieGenre}\n                            onChange={e => dispatch({\n                                type: 'fieldNameChange',\n                                payload: {\n                                    fieldName: 'movieGenre',\n                                    value: e.currentTarget.value,\n                                }\n                            })}\n                        />\n\n                        <MovieFormInput\n                            label=\"Cast\"\n                            id=\"cast\"\n                            value={movieCast}\n                            onChange={e => dispatch({\n                                type: 'fieldNameChange',\n                                payload: {\n                                    fieldName: 'movieCast',\n                                    value: e.currentTarget.value,\n                                }\n                            })}\n                        />\n                        <small className=\"mf__small\">Please put a comma and space between cast names</small>\n                        <small className=\"mf__small\">*Required</small>\n                        <div className=\"center\">\n                            <Button className=\"btn\" onClick={handleSubmit}>Add movie</Button>\n                        </div>\n                    </form>\n                </Paper>\n            </DialogContent>\n        </Dialog >\n    );\n}\n\nexport default MovieFormDialogue;","import React, { forwardRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateMovie, deleteMovie, resetMovies } from '../data/actions/api';\nimport Header from './Header';\nimport Button from './Button';\nimport ResetMoviesDialogue from './Dialogues/ResetMoviesDialogue';\nimport MovieFormDialogue from './Dialogues/MovieFormDialogue';\n// material ui components\nimport Container from '@material-ui/core/Container';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport MaterialTable from 'material-table'\nimport { makeStyles } from '@material-ui/core/styles';\n\n// mui's makestyles hook, allows for custom classnames in material ui components\nconst useStyles = makeStyles({\n    arrow: {\n        transition: \"all 0.2s linear\",\n        marginLeft: \"0.2rem\"\n    },\n    font5: {\n        fontSize: \"5rem\"\n    }\n});\n\nconst MyMovies = () => {\n    // assigning useDispatch hook to variable\n    const dispatchAction = useDispatch();\n    // brings in the necessary global state properties\n    const movies = useSelector(state => state.movie.movies)\n    const user = useSelector(state => state.auth.user)\n\n    // initial state of movie form dialogue\n    const [movieFormOpen, setMovieFormOpen] = useState(false);\n    // handles opening the 'add movie' form dialogue\n    const handleMovieFormOpen = () => {\n        setMovieFormOpen(true);\n    };\n\n    // handles closing the 'add movie' form dialogue\n    const handleMovieFormClose = () => {\n        setMovieFormOpen(false);\n    };\n\n    // initial state of reset movies warning dialogue\n    const [resetWarningOpen, setResetWarningOpen] = useState(false);\n    // opens warning dialogue when user clicks reset movies\n    const handleResetWarningOpen = () => {\n        setResetWarningOpen(true);\n    };\n\n    // closes warning dialogue when user clicks to reset or go back\n    const handleResetWarningClose = () => {\n        setResetWarningOpen(false);\n    };\n\n    // clears all movies from user's movie table\n    const handleReset = () => {\n        dispatchAction(resetMovies(user));\n        setResetWarningOpen(false);\n    }\n\n    // dispatches updated movie info to global state\n    const handleUpdateMovie = (data) => {\n        dispatchAction(updateMovie(data));\n    }\n\n    // deletes specific movie from global state\n    const handleDeleteMovie = (id) => {\n        dispatchAction(deleteMovie(id));\n    }\n\n    // material ui table icons\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ImportExportIcon ref={ref}\n            className={classes.arrow}\n        />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    // this is where the table columns and their headers are set \n    const [columns] = useState([\n        { title: 'Movie Title', field: 'movieTitle' },\n        { title: 'Director', field: 'movieDirector' },\n        { title: 'Genre', field: 'movieGenre' },\n        { title: 'Cast', field: 'movieCast' },\n        {\n            title: 'Watched',\n            field: 'movieWatched',\n            type: 'boolean',\n            render: rowData => (\n                rowData.movieWatched ? 'Yes' : 'No'\n            )\n        },\n    ]);\n\n    return (\n        <div className=\"background-image\">\n            <Container width=\"50%\">\n                <Header>My Movies</Header>\n                {/* movie form that opens when user clicks 'add movie' button */}\n                <MovieFormDialogue\n                    handleMovieFormClose={handleMovieFormClose}\n                    movieFormDialogueOpen={movieFormOpen}\n                />\n                <div className=\"center\">\n                    <Button\n                        className=\"btn btn-secondary mt-1 mb-1\"\n                        onClick={handleMovieFormOpen}\n                    >Add a movie\n                    </Button>\n                </div>\n                {/* displays movie table only if there are any movies in global state */}\n                {movies.length ?\n                    <>\n                        {/* dialogue that opens when user clicks 'reset movies' button */}\n                        <ResetMoviesDialogue\n                            handleClose={handleResetWarningClose}\n                            handleReset={handleReset}\n                            open={resetWarningOpen}\n                        />\n                        {/* material ui table that displays user's movies */}\n                        {/* make it so sort button always shows so columns are properly aligned */}\n                        <MaterialTable\n                            title=\"Movie List\"\n                            icons={tableIcons}\n                            columns={columns}\n                            data={movies}\n                            editable={{\n                                onRowUpdate: (newMovie, oldMovies) =>\n                                    new Promise((resolve) => {\n                                        const dataUpdate = [...movies];\n                                        const index = oldMovies.id;\n                                        dataUpdate[index] = newMovie;\n                                        handleUpdateMovie(newMovie);\n\n                                        resolve();\n                                    }),\n                                onRowDelete: oldMovies =>\n                                    new Promise((resolve) => {\n                                        const id = oldMovies.id;\n                                        handleDeleteMovie(id)\n                                        resolve()\n                                    }),\n                            }}\n\n                            options={{\n                                actionsColumnIndex: -1,\n                                headerStyle: {\n                                    fontSize: \"1rem\",\n                                    textAlign: \"center\",\n                                    whiteSpace: \"nowrap\",\n                                },\n                                rowStyle: {\n                                    fontFamily: \"Roboto, Helvetica, Arial\",\n                                    fontSize: \"1rem\",\n                                    textAlign: \"center\",\n                                },\n                                cellStyle: {\n                                    textAlign: \"center\",\n                                }\n                            }}\n                        />\n                        <div className=\"center mt-1\">\n                            <Button className=\"btn btn-secondary mb-1\" onClick={handleResetWarningOpen}>Reset</Button>\n                        </div>\n                    </>\n                    :\n                    <h2 className=\"center movie-table__h2\">No movies! Add some by clicking the button above</h2>\n                }\n            </Container>\n        </div>\n    )\n}\n\nexport default MyMovies;","import React, { useState } from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Paper from '@material-ui/core/Paper';\nimport Collapse from '@material-ui/core/Collapse';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst FilterGroup = ({ heading, filtersNoDuplicates, onChange }) => {\n    const [showFilters, setShowFilters] = useState(false)\n    const [rotateChevron, setRotateChevron] = useState(false)\n\n    // handles showing and hiding filters and rotating chevron\n    const handleFilters = () => {\n        setShowFilters(!showFilters);\n        setRotateChevron(!rotateChevron);\n    }\n\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        paper: {\n            padding: \"1rem\"\n        },\n        roboto: {\n            fontFamily: \"Roboto, sans-serif\"\n        },\n        rotateChev: {\n            transform: rotateChevron ? \"rotate(180deg)\" : \"rotate(0)\",\n            transition: \"all 0.2s linear\"\n        },\n        flexColumn: {\n            flexDirection: \"column\"\n        },\n        marginLeft: {\n            marginLeft: \"0.3rem\"\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <div className=\"filters__group\">\n            <div className=\"filters__heading flex-align-center center\">\n                <h4>{heading}</h4>\n                <ExpandMoreIcon\n                    className={classes.rotateChev + \" filters__chevron\"}\n                    onClick={handleFilters}\n                />\n            </div>\n            {/* these conditions mean that nothing drops down unless the user has populated a filter group with at least one filter option */}\n            {filtersNoDuplicates[0] !== \"\" && filtersNoDuplicates.length > 0 &&\n                <Collapse in={showFilters}>\n                    <Paper elevation={4} className={classes.paper}>\n                        <div className={classes.flexColumn + \" flex-align-center center\"}>\n                            {filtersNoDuplicates.map((filter, i) => {\n                                return (\n                                    <div key={i} className=\"flex-align-center mb-1\">\n                                        <label className={classes.fontFamily} htmlFor=\"filter\">{filter}</label>\n                                        <input\n                                            id=\"filter\"\n                                            type=\"checkbox\"\n                                            value={filter}\n                                            onChange={onChange}\n                                            className={classes.marginLeft}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </Paper>\n                </Collapse>\n            }\n        </div>\n    );\n};\n\nexport default FilterGroup;","import React from 'react';\nimport Button from '../../Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst PickedMovieDialogue = ({ handleClose, open, pickedMovie }) => {\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        paper: {\n            backgroundColor: \"#cfe8fc\",\n        },\n        berp: {\n            justifyContent: \"center\"\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n        >\n            <div className=\"dialogue__container\">\n                <h1 className=\"dialogue__heading\">Your movie</h1>\n                <DialogContent >\n                    <Paper\n                        classes={{ root: classes.paper }}\n                        className=\"paper\"\n                        elevation={3}\n                    >\n                        <h1 className=\"picked-movie__h1\">{pickedMovie.movieTitle}</h1>\n                        {pickedMovie.movieDirector !== \"-\"\n                            ?\n                            <p className=\"picked-movie__director\">Director: {pickedMovie.movieDirector}</p>\n                            :\n                            null\n                        }\n\n                    </Paper>\n                </DialogContent>\n                <DialogActions className={classes.berp}>\n                    <Button\n                        className=\"btn btn-secondary\"\n                        onClick={handleClose}>Choose again\n                </Button>\n                </DialogActions>\n            </div>\n        </Dialog>\n    );\n};\n\nexport default PickedMovieDialogue;","import { connect } from \"react-redux\";\nimport PickedMovieDialogue from \"./PickedMovieDialogue\"\n\nconst mapStateToProps = state => {\n    return {\n        pickedMovie: state.movie.pickedMovie\n    };\n};\n\nexport default connect(mapStateToProps)(PickedMovieDialogue);","import React from 'react';\nimport Button from '../Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst NoMoviesDialogue = ({ handleClose, open }) => {\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        paper: {\n            backgroundColor: \"#cfe8fc\",\n        },\n        paddingNone: {\n            padding: \"0\"\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n        >\n            <div className=\"dialogue__container\">\n                <h1 className=\"dialogue__heading\">No movies!</h1>\n                <DialogContent>\n                    <Paper\n                        className={classes.paper + \" paper\"}\n                        elevation={3}\n                    >\n                        <h3 className=\"no-movies__h3\">There are no movies matching your search criteria. Please change your filters or add a movie that matches them.</h3>\n                    </Paper>\n                </DialogContent>\n                <DialogActions className={classes.paddingNone}>\n                    <Button\n                        className=\"btn\"\n                        onClick={handleClose}>Back\n                </Button>\n                </DialogActions>\n            </div>\n        </Dialog>\n    );\n};\n\nexport default NoMoviesDialogue;","import React, { Component } from 'react';\nimport Header from \"../Header\";\nimport Button from '../Button';\nimport FilterGroup from \"../FilterGroup\";\nimport PickedMovieDialogue from \"../Dialogues/PickedMovieDialogue\";\nimport NoMoviesDialogue from \"../Dialogues/NoMoviesDialogue\";\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport { randomFilteredMovie } from '../../functions/randomFilteredMovie'\nimport { withStyles } from \"@material-ui/core/styles\";\n\n// styles object that stores classes, gets passed through mui's withstyles higher order component (see export at the bottom). Allows custom classes to be added to mui components\nconst styles = {\n    paper: {\n        overflowX: \"auto\"\n    },\n    spaceAround: {\n        width: \"100%\",\n        justifyContent: \"space-around\"\n    },\n    roboto: {\n        fontFamily: \"Roboto, sans-serif\"\n    },\n    marginLeft: {\n        marginLeft: \"0.3rem\"\n    }\n};\n\nclass MoviePicker extends Component {\n    constructor(props) {\n        super(props);\n\n        // the filters array here stores all of the filters the user ticks when picking a movie\n        this.state = {\n            filters: [],\n            movieDialogueOpen: false,\n            warningDialogueOpen: false,\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handlePickMovie = this.handlePickMovie.bind(this);\n        this.handleMovieDialogueOpen = this.handleMovieDialogueOpen.bind(this);\n        this.handleMovieDialogueClose = this.handleMovieDialogueClose.bind(this);\n        this.handleWarningDialogueOpen = this.handleWarningDialogueOpen.bind(this);\n        this.handleWarningDialogueClose = this.handleWarningDialogueClose.bind(this);\n    }\n\n    // opens the dialogue containing the picked movie\n    handleMovieDialogueOpen() {\n        this.setState({\n            movieDialogueOpen: true,\n        });\n    };\n\n    // closes the dialogue containing the picked movie\n    handleMovieDialogueClose() {\n        this.setState({\n            movieDialogueOpen: false,\n        });\n    };\n\n    // this function shows the warning (no movies match criteria) dialogue\n    handleWarningDialogueOpen() {\n        this.setState({ warningDialogueOpen: true });\n    };\n\n    // closes the warning (no movies match criteria) dialogue\n    handleWarningDialogueClose() {\n        this.setState({ warningDialogueOpen: false });\n    };\n\n    // this function adds or removes a filter requirement from the filters array depending on whether the user is checking or unchecking it\n    handleChange(e) {\n        let filterItem = e.target.value\n\n        if (this.state.filters.indexOf(filterItem) === -1) {\n            this.setState({\n                filters: [...this.state.filters, filterItem]\n            })\n        } else if (this.state.filters.indexOf(filterItem) > -1) {\n            this.setState({\n                filters: this.state.filters.filter(filter => {\n                    return filter !== filterItem\n                })\n            })\n        }\n    }\n\n    // as the 'watched' property for each movie is a boolean, this function is necessary to compare whether the boolean exists in the filters array (whether the user is filtering by watched or unwatched movies)\n    handleWatched(bool) {\n        if (this.state.filters.indexOf(bool) === -1) {\n            this.setState({\n                filters: [...this.state.filters, bool]\n            })\n        } else if (this.state.filters.indexOf(bool) > -1) {\n            this.setState({\n                filters: this.state.filters.filter(filter => {\n                    return filter !== bool\n                })\n            })\n        }\n    }\n\n    // handles picking a random movie with or without filter requirements\n    handlePickMovie() {\n        let { filters } = this.state\n        let { movies } = this.props\n\n        let pickedMovie = {}\n\n        // if there are filter requirements, pick a random movie based on them, else just pick a random movie \n        if (filters.length) {\n            pickedMovie = randomFilteredMovie(filters, movies)\n        } else {\n            pickedMovie = movies[Math.floor(Math.random() * movies.length)]\n        }\n\n        // dispatches picked movie to reducer \n        this.props.handlePickedMovie(pickedMovie)\n\n        // if user has watched all movies but filters by unwatched (or vice versa), error dialogue will show\n        pickedMovie === undefined ? this.handleWarningDialogueOpen() : this.handleMovieDialogueOpen()\n    }\n\n    render() {\n        const { movieDialogueOpen, warningDialogueOpen } = this.state\n        const { movies, classes } = this.props\n\n        // the new sets in these variables remove duplicate filters, so each filter is only listed once\n        const directorsNoDuplicates = [...new Set(movies.map(movie => movie.movieDirector).filter(director => director !== \"-\"))];\n        const genresNoDuplicates = [...new Set(movies.map(movie => movie.movieGenre).filter(genre => genre !== \"-\"))];\n        // this flattens the array of cast arrays into one array\n        const castNoDuplicates = [...new Set(movies.map(movie => movie.movieCast.split(', ')).flat().filter(cast => cast !== \"-\"))];\n\n        return (\n            <div className=\"background-image\">\n                <Container width=\"70%\">\n                    <PickedMovieDialogue handleClose={this.handleMovieDialogueClose} open={movieDialogueOpen} />\n                    <NoMoviesDialogue handleClose={this.handleWarningDialogueClose} open={warningDialogueOpen} />\n                    <Header>Movie Picker</Header>\n                    <h3 className=\"center mp__h3\">Pick a random movie from your movies, with or without filters</h3>\n                    <Paper className={classes.overflowX} elevation={4}>\n                        <div className=\"filters__container\">\n                            <div className=\"filters\">\n\n                                {/* directors filter group */}\n                                <FilterGroup\n                                    heading=\"Directors\"\n                                    filtersNoDuplicates={directorsNoDuplicates}\n                                    onChange={(e) => this.handleChange(e)}\n                                />\n\n                                {/* genres filter group */}\n                                <FilterGroup\n                                    heading=\"Genres\"\n                                    filtersNoDuplicates={genresNoDuplicates}\n                                    onChange={(e) => this.handleChange(e)}\n                                />\n\n                                {/* cast filters group */}\n                                <FilterGroup\n                                    heading=\"Cast\"\n                                    filtersNoDuplicates={castNoDuplicates}\n                                    onChange={(e) => this.handleChange(e)}\n                                />\n\n                                {/* watched before filters group */}\n                                <div className=\"filters__group filters__group-watched-before\">\n                                    <h4 className=\"filters__heading\">Watched before</h4>\n                                    <div\n                                        className={classes.spaceAround + \" flex-align-center\"}\n                                    >\n                                        <div className=\"flex-align-center filters__watched-checkbox\">\n                                            <label className={classes.roboto} htmlFor=\"yes\">Yes</label>\n                                            <input\n                                                id=\"yes\"\n                                                type=\"checkbox\"\n                                                onChange={() => this.handleWatched(true)}\n                                                className={classes.marginLeft}\n                                            />\n                                        </div>\n                                        <div className=\"flex-align-center filters__watched-checkbox\">\n                                            <label className={classes.roboto} htmlFor=\"no\">No</label>\n                                            <input\n                                                id=\"no\"\n                                                type=\"checkbox\"\n                                                onChange={() => this.handleWatched(false)}\n                                                className={classes.marginLeft}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"center mt-1\" >\n                                <Button className=\"btn\" onClick={this.handlePickMovie}>Pick movie</Button>\n                            </div>\n                        </div>\n                    </Paper>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(MoviePicker);","export const randomFilteredMovie = (filters, movies) => {\n\n    // this reducer checks if at least one value of each movie object is included in the filters array. The movieCast property of each movie, initially a string, is split into an array which can then also be looped through. If a movie's genre or director or is in the filters array, or if the movie contains a star that is in there, then the movie object is added to the accumulator array.\n    let filteredMovies = movies.reduce((acc, movie) => {\n        if (\n            Object.values(movie).some(val => filters.includes(val))\n            ||\n            movie.movieCast.split(', ').some(star => filters.includes(star))\n        ) {\n            return [...acc, movie]\n        }\n        return acc\n    }, [])\n\n    // returns a random index of the new array of movie objects \n    return filteredMovies[Math.floor(Math.random() * filteredMovies.length)]\n}","import { connect } from \"react-redux\";\nimport MoviePicker from \"./MoviePicker\";\nimport { savePickedMovie } from \"../../data/actions/state\";\n\nconst mapStateToProps = state => {\n    return {\n        movies: state.movie.movies\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handlePickedMovie: pickedMovie => dispatch(savePickedMovie((pickedMovie)))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviePicker);","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst FourOhFour = () => {\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        h1: {\n            textAlign: \"center\",\n            fontSize: \"5rem\",\n            marginBottom: \"2rem\"\n        }\n    })\n\n    // storing custom classes in classes variable\n    const classes = useStyles()\n\n    return (\n        <div className=\"background-image\">\n            <div className=\"dshbrd__container\">\n                <h1 className={classes.h1}>Oops, page not found</h1>\n                <Link className=\"btn btn-secondary\" to=\"/dashboard\">Home</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default FourOhFour;","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Home from './Home/Home'\nimport Dashboard from './Dashboard'\nimport { PrivateRoute } from './PrivateRoute'\nimport MyMovies from './MyMovies'\nimport MoviePicker from './MoviePicker'\nimport FourOhFour from './FourOhFour'\nimport Login from './Home/Login'\nimport Register from './Home/Register'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <PrivateRoute path=\"/mymovies\" component={MyMovies} />\n          <PrivateRoute path=\"/moviepicker\" component={MoviePicker} />\n          <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n          <FourOhFour />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","const initialState = {\n    pickedMovie: {},\n    movies: []\n}\n\nexport default (state = initialState, action) => {\n    let { type, payload } = action\n    switch (type) {\n        case \"SAVE_MOVIES\":\n            return {\n                ...state,\n                movies: [...state.movies, ...payload],\n                loaded: true\n            }\n        case \"ADD_MOVIE\":\n            return {\n                ...state,\n                movies: [...state.movies, payload]\n            }\n        case \"REMOVE_MOVIE\":\n            return {\n                ...state,\n                movies: state.movies.filter(movie => {\n                    return movie.id !== payload\n                })\n            }\n        case \"UPDATE_MOVIE\":\n            return {\n                ...state,\n                movies: state.movies.map(movie => movie.id === payload.id ? payload : movie)\n            }\n        case \"RESET_MOVIES\":\n            return {\n                ...state,\n                movies: [],\n            }\n        case \"SAVE_PICKED_MOVIE\":\n            return {\n                ...state,\n                pickedMovie: { ...payload }\n            }\n        default:\n            return state\n    }\n}","const initialState = {\n    authResponse: null,\n    user: {}\n}\n\nexport default (state = initialState, action) => {\n    const { type } = action\n    switch (type) {\n        case 'RESTART_AUTH_RESPONSE':\n            return {\n                ...state,\n                authResponse: null\n            }\n        case 'LOADING':\n            return {\n                ...state,\n                authResponse: 'Loading...'\n            }\n        case 'SHORT_PASSWORD':\n            return {\n                ...state,\n                authResponse: 'Password is too short.'\n            }\n        case 'SIGNUP_SUCCESS':\n            return {\n                ...state,\n                authResponse: 'Register successful!',\n                user: { ...action.payload }\n            }\n\n        case 'SIGNUP_ERROR':\n            return {\n                ...state,\n                authResponse: action.res.data.message,\n            }\n        case 'CODE_ERROR':\n            return {\n                ...state,\n                authResponse: 'There seems to be a problem, please try again later.',\n            }\n        case 'LOGIN_SUCCESS':\n            return {\n                ...state,\n                authResponse: 'Redirecting you to dashboard...',\n                user: { ...action.payload }\n            }\n        case 'LOGOUT_USER':\n            return {\n                ...state,\n                user: {}\n            }\n        case 'LOGIN_ERROR':\n            return {\n                ...state,\n                authResponse: action.res.data.message,\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport MovieReducer from './MovieReducer'\nimport AuthReducer from './AuthReducer'\n\nconst initialState = {\n    pickedMovie: {},\n    authResponse: null,\n    user: {},\n    movies: [],\n    loaded: false\n}\n\nconst RootReducer = combineReducers({\n    auth: AuthReducer,\n    movie: MovieReducer\n})\n\n\nexport default RootReducer","import RootReducer from \"./reducers/RootReducer\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport persistState from \"redux-localstorage\";\n\nconst composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    RootReducer,\n    composeEnhancers(applyMiddleware(thunk), persistState()),\n);\n\n// const store = createStore(\n//     RootReducer,\n//     composeEnhancers(applyMiddleware(thunk))\n// );\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './css/index.css';\n\n// provider and store\nimport { Provider } from \"react-redux\";\nimport store from \"./data/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}