{"version":3,"sources":["components/LandingPage.js","components/Button.js","components/Dialogues/AboutDialogue.js","components/Header.js","components/Dialogues/AlertDialogue.js","components/Movie.js","data/actions.js","components/Dialogues/ResetMoviesDialogue.js","components/MovieTable/MovieTable.js","components/MovieTable/index.js","components/MovieFormInput.js","components/Dialogues/MovieFormDialogue.js","components/MyMovies.js","components/FilterGroup.js","components/Dialogues/PickedMovieDialogue/PickedMovieDialogue.js","components/Dialogues/PickedMovieDialogue/index.js","components/Dialogues/NoMoviesDialogue.js","components/MoviePicker/MoviePicker.js","functions/randomFilteredMovie.js","components/MoviePicker/index.js","components/FourOhFour.js","components/App.js","data/initial.js","data/reducer.js","data/store.js","index.js"],"names":["LandingPage","className","to","Button","onClick","children","AboutDialogue","handleAboutClose","aboutDialogueOpen","classes","makeStyles","paper","backgroundColor","paddingNone","padding","useStyles","Dialog","open","onClose","DialogContent","Paper","elevation","DialogActions","Header","React","useState","setOpen","fontSize44","fontSize","AlertDialogue","handleClose","dialogueHeading","dialogueContent","transition","greenBackground","tableCell","watchedButton","fontFamily","overflowX","watchedIcon","marginLeft","movieReducer","draft","action","type","fieldName","payload","editing","Movie","index","movie","initialState","movieTitle","movieGenre","movieDirector","movieStarring","watched","useImmerReducer","state","dispatch","dispatchUpdatedMovie","useDispatch","dispatchWatchedMovie","dispatchDeleteMovie","directorContent","genreContent","starringContent","titleContent","watchedBackground","TableRow","TableCell","align","TextField","value","onChange","e","currentTarget","updateWatched","handleWatched","updatedMovie","updateMovie","handleUpdate","removeMovie","handleDelete","ResetMoviesDialogue","handleReset","MovieTable","movies","tableHeadCell","fontWeight","whiteSpace","console","log","length","TableContainer","component","Table","size","TableHead","TableBody","map","i","key","connect","MovieFormInput","label","id","faIcon","marginBottom","FormControl","InputLabel","htmlFor","Input","movieFormReducer","warningDialogueOpen","MovieFormDialogue","handleMovieFormClose","movieFormDialogueOpen","dispatchMovie","handleSubmit","preventDefault","submitMovie","onSubmit","MyMovies","Container","width","FilterGroup","heading","filtersNoDuplicates","showFilters","setShowFilters","rotateChevron","setRotateChevron","roboto","rotateChev","transform","flexColumn","flexDirection","Collapse","in","filter","PickedMovieDialogue","pickedMovie","berp","justifyContent","root","NoMoviesDialogue","MoviePicker","props","filters","movieDialogueOpen","handleChange","bind","handlePickMovie","handleMovieDialogueOpen","handleMovieDialogueClose","handleWarningDialogueOpen","handleWarningDialogueClose","this","setState","filterItem","target","indexOf","bool","filteredMovies","reduce","acc","Object","values","some","val","includes","split","star","Math","floor","random","randomFilteredMovie","handlePickedMovie","undefined","directorsNoDuplicates","Set","genresNoDuplicates","starringNoDuplicates","flat","spaceAround","Component","withStyles","savePickedMovie","FourOhFour","h1","textAlign","App","exact","path","initial","reducer","_","deleteMovie","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","persistState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95db2eba.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst LandingPage = () => (\n    <div className=\"background-image\">\n        <div className=\"lp__container\">\n            <h2 className=\"lp__heading\" ><span className=\"lp__heading-blue\">Me</span>Movie</h2>\n            <h2 className=\"lp__sub-heading\">Your personalised movie hub</h2>\n            <nav className=\"lp__btn-group\">\n                <Link className=\"btn lp__btn\" to=\"movie-picker\">Pick me a movie!</Link>\n                <Link className=\"btn lp__btn\" to=\"my-movies\">My Movies</Link>\n            </nav>\n        </div>\n    </div>\n);\n\nexport default LandingPage;","import React from 'react';\n\nconst Button = ({ className, onClick, children }) => (\n    <button\n        className={className}\n        onClick={onClick}\n    >{children}\n    </button>\n);\n\nexport default Button;","import React from 'react';\nimport Button from '../Button';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst AboutDialogue = ({ handleAboutClose, aboutDialogueOpen }) => {\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        paper: {\n            backgroundColor: \"#cfe8fc\",\n        },\n        paddingNone: {\n            padding: \"0\"\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={aboutDialogueOpen}\n            onClose={handleAboutClose}\n        >\n            <div className=\"dialogue__container\">\n                <h1 className=\"dialogue__heading\">About MeMovie</h1>\n                <DialogContent>\n                    <Paper\n                        className={classes.paper + \" paper\"}\n                        elevation={3}\n                    >\n                        <p>MeMovie removes the hours spent staring at Netflix, perplexed at how there can be so many films that you don't want to spend your evening watching.</p><br />\n\n                        <p>With MeMovie, when you hear about a film you would like to see, simply enter at least the title (you can also enter the director, genre and who it stars), and it will be added to your table of movies. When you want to watch one, simply pick from the table, or use the pick movie feature, which will pick you a random movie only from your table.</p><br />\n\n                        <p>You are able to use filters when picking, so if you want ie a random horror movie, providing you have added some movies with horror as their genre, check the horror filter and you will be picked a random horror movie.</p><br />\n\n                        <p>Happy watching!</p>\n                    </Paper>\n                </DialogContent>\n                <DialogActions className={classes.paddingNone}>\n                    <Button\n                        className=\"btn\"\n                        onClick={handleAboutClose}>Back\n                </Button>\n                </DialogActions>\n            </div>\n        </Dialog>\n    );\n};\n\nexport default AboutDialogue;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from './Button';\nimport MovieIcon from '@material-ui/icons/Movie';\nimport AboutDialogue from './Dialogues/AboutDialogue';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Header = ({ children }) => {\n    const [open, setOpen] = React.useState(false);\n\n    // handles opening the add movie form dialogue\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    // handles closing the add movie form dialogue\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        fontSize44: {\n            fontSize: 44\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <header className=\"header\">\n            <div className=\"header__icon-container\">\n                <Link className=\"header__icon-home\" to=\"/\"><MovieIcon className={classes.fontSize44} /></Link>\n            </div>\n            <h1 className=\"header__h1\" >{children}</h1>\n            <nav className=\"header__nav\">\n                <Link className=\"btn\" to=\"movie-picker\">Movie Picker</Link>\n                <i className=\"fas fa-circle\"></i>\n                <Link className=\"btn\" to=\"my-movies\">My Movies</Link>\n                <i className=\"fas fa-circle\"></i>\n                <AboutDialogue handleAboutClose={handleClose} aboutDialogueOpen={open} />\n                <Button\n                    className=\"btn\"\n                    onClick={handleClickOpen}\n                >About\n                    </Button>\n            </nav>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport Button from '../Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst AlertDialogue = ({ open, handleClose, dialogueHeading, dialogueContent }) => {\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        paper: {\n            backgroundColor: \"rgba(255, 191, 102, 0.9)\",\n        },\n        paddingNone: {\n            padding: \"0\"\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n        >\n            <div className=\"dialogue__container\">\n                <h1 className=\"dialogue__heading\">{dialogueHeading}</h1>\n                <DialogContent>\n                    <Paper\n                        className={classes.paper + \" paper\"}\n                        elevation={3}\n                    >\n                        <div className=\"flex-align-center dialogue__content-alert\">\n                            <ReportProblemOutlinedIcon />\n                            <p>{dialogueContent}</p>\n                        </div>\n                    </Paper>\n                </DialogContent>\n                <DialogActions className={classes.paddingNone}>\n                    <Button className=\"btn\" onClick={handleClose}>Ok</Button>\n                </DialogActions>\n            </div>\n        </Dialog >\n    );\n};\n\nexport default AlertDialogue;","import React from 'react';\nimport { useImmerReducer } from 'use-immer';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { updateMovie, removeMovie, updateWatched } from '../data/actions';\nimport Button from './Button';\nimport AlertDialogue from './Dialogues/AlertDialogue';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TextField from '@material-ui/core/TextField';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DoneIcon from '@material-ui/icons/Done';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\n// mui's makestyles hook, allows for custom classnames in material ui components\nconst useStyles = makeStyles({\n    transition: {\n        transition: \"all 0.3s linear\"\n    },\n    greenBackground: {\n        backgroundColor: \"#8affa9\"\n    },\n    tableCell: {\n        fontSize: \"1rem\"\n    },\n    watchedButton: {\n        fontFamily: \"Roboto, arial\",\n        fontSize: \"1rem\",\n        overflowX: \"auto\"\n    },\n    watchedIcon: {\n        marginLeft: \"0.4rem\"\n    }\n});\n\n// local reducer that handles updating local state properties (initialised in the initialState variable below)\nconst movieReducer = (draft, action) => {\n    switch (action.type) {\n        case 'fieldNameChange': {\n            draft[action.fieldName] = action.payload;\n            return\n        }\n        case 'editMovie': {\n            draft.editing = true;\n            return\n        }\n        case 'saveMovie': {\n            draft.editing = false;\n            return\n        }\n        case 'dialogueOpen': {\n            draft.open = true;\n            return\n        }\n        case 'dialogueClose': {\n            draft.open = false;\n            return\n        }\n        default: return;\n    }\n}\n\nconst Movie = ({ index, movie }) => {\n    // initial state of component\n    const initialState = {\n        movieTitle: movie.movieTitle,\n        movieGenre: movie.movieGenre,\n        movieDirector: movie.movieDirector,\n        movieStarring: movie.movieStarring,\n        watched: movie.watched,\n        editing: false,\n        open: false\n    }\n\n    const [state, dispatch] = useImmerReducer(movieReducer, initialState);\n    const { movieTitle, movieGenre, movieDirector, movieStarring, editing, open } = state;\n\n    // checks whether movie title input has text in, if not the warning dialogue shows, if so the updated movie details are dispatched to the reducer and saved\n    const dispatchUpdatedMovie = useDispatch();\n    const handleUpdate = (index) => {\n        if (state.movieTitle === \"\") {\n            dispatch({ type: \"dialogueOpen\" })\n        } else {\n\n            let movie = {\n                movieTitle: state.movieTitle,\n                movieGenre: state.movieGenre,\n                movieDirector: state.movieDirector,\n                movieStarring: state.movieStarring,\n                watched: state.watched\n            }\n\n            dispatchUpdatedMovie(updateMovie(movie, index));\n\n            // set editing property back to false\n            dispatch({ type: \"saveMovie\" })\n        }\n    }\n\n    // toggles the boolean for the watched property for the specific movie in global state\n    const dispatchWatchedMovie = useDispatch();\n    const handleWatched = (index) => {\n        dispatchWatchedMovie(updateWatched(index));\n    }\n\n    // deletes specific movie \n    const dispatchDeleteMovie = useDispatch();\n    const handleDelete = (index) => {\n        dispatchDeleteMovie(removeMovie(index));\n    }\n\n    // these ternarys mean that a hyphen is rendered in the table if user leaves any form field empty. There isn't one for movie title as user cannot leave the title blank\n    const directorContent = movie.movieDirector === \"\" ? \"-\" : movie.movieDirector;\n    const genreContent = movie.movieGenre === \"\" ? \"-\" : movie.movieGenre;\n    const starringContent = movie.movieStarring === \"\" ? \"-\" : movie.movieStarring;\n    const titleContent = movie.movieTitle;\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    // background toggles green if user has clicked 'watched' button\n    const watchedBackground = movie.watched ? classes.greenBackground : \"\";\n\n    return (\n        <>\n            <AlertDialogue\n                handleClose={() => dispatch({ type: 'dialogueClose' })}\n                open={open}\n                dialogueHeading=\"No movie title\"\n                dialogueContent=\"Please include a movie title\"\n            />\n            <TableRow className={watchedBackground + \" \" + classes.transition}>\n                <TableCell className={classes.tableCell} align=\"center\">\n                    {editing\n                        ?\n                        (<TextField\n                            value={movieTitle}\n                            onChange={e => dispatch({\n                                type: 'fieldNameChange',\n                                fieldName: 'movieTitle',\n                                payload: e.currentTarget.value,\n                            })}\n                        />)\n                        :\n                        (titleContent)\n                    }\n                </TableCell>\n                <TableCell className={classes.tableCell} align=\"center\">\n                    {editing\n                        ?\n                        (<TextField\n                            value={movieDirector}\n                            onChange={e => dispatch({\n                                type: 'fieldNameChange',\n                                fieldName: 'movieDirector',\n                                payload: e.currentTarget.value,\n                            })}\n                        />)\n                        :\n                        (directorContent)\n                    }\n                </TableCell>\n                <TableCell className={classes.tableCell} align=\"center\">\n                    {editing\n                        ?\n                        (<TextField\n                            value={movieGenre}\n                            onChange={e => dispatch({\n                                type: 'fieldNameChange',\n                                fieldName: 'movieGenre',\n                                payload: e.currentTarget.value,\n                            })}\n                        />)\n                        :\n                        (genreContent)\n                    }\n                </TableCell>\n                <TableCell className={classes.tableCell} align=\"center\">\n                    {editing ?\n                        (<TextField\n                            value={movieStarring}\n                            onChange={e => dispatch({\n                                type: 'fieldNameChange',\n                                fieldName: 'movieStarring',\n                                payload: e.currentTarget.value,\n                            })}\n                        />)\n                        :\n                        (starringContent)\n                    }\n                </TableCell>\n                <TableCell className={classes.tableCell} align=\"center\">\n                    <div className=\"flex__align__center\">\n                        <Button\n                            className={classes.watchedButton + \" btn movie-table__btn flex-align-center\"}\n                            onClick={() => handleWatched(index)}>Watched\n                {movie.watched\n                                ?\n                                <CheckCircleIcon className={classes.watchedIcon} />\n                                :\n                                <CancelIcon className={classes.watchedIcon} />\n                            }\n                        </Button>\n                    </div>\n                </TableCell>\n                <TableCell align=\"center\">\n                    {editing\n                        ?\n                        (<Button\n                            className=\"btn movie-table__btn\"\n                            onClick={() => handleUpdate(index)}>\n                            <DoneIcon />\n                        </Button>)\n                        :\n                        (<Button\n                            className=\"btn movie-table__btn\"\n                            onClick={() => dispatch({ type: 'editMovie' })}>\n                            <EditIcon />\n                        </Button>)\n                    }\n                </TableCell>\n                <TableCell align=\"center\">\n                    <Button\n                        className=\"btn movie-table__btn\"\n                        onClick={() => handleDelete(index)}\n                    >\n                        <DeleteIcon />\n                    </Button>\n                </TableCell>\n            </TableRow>\n        </>\n    );\n};\n\nexport default Movie;","export const submitMovie = (movie) => ({\n    type: \"submitMovie\",\n    movie: movie\n})\n\nexport const removeMovie = (index) => ({\n    type: \"deleteMovie\",\n    index: index\n})\n\nexport const updateMovie = (movie, index) => ({\n    type: \"updateMovie\",\n    updatedMovie: movie,\n    index: index\n})\n\nexport const updateWatched = (index) => ({\n    type: \"updateWatched\",\n    index: index\n})\n\nexport const resetMovies = () => ({\n    type: \"resetMovies\"\n})\n\nexport const savePickedMovie = (pickedMovie) => ({\n    type: \"savePickedMovie\",\n    pickedMovie: pickedMovie\n})","import React from 'react';\nimport Button from '../Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst ResetMoviesDialogue = ({ open, handleClose, handleReset }) => {\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        paper: {\n            backgroundColor: \"rgba(255, 191, 102, 0.9)\",\n        },\n        paddingNone: {\n            padding: \"0\"\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n        >\n            <div className=\"dialogue__container\">\n                <h1 className=\"dialogue__heading\">Reset your movies?</h1>\n                <DialogContent>\n                    <Paper className={classes.paper + \" paper\"}\n                        elevation={3}>\n                        <div className=\"flex-align-center dialogue__content-alert\">\n                            <ReportProblemOutlinedIcon />\n                            <p>This will clear the table and you will have to start over</p>\n                        </div>\n                    </Paper>\n                </DialogContent>\n                <DialogActions className={classes.paddingNone}>\n                    <div className=\"center\">\n                        <Button\n                            className=\"btn\"\n                            onClick={handleClose}>Back\n                    </Button>\n                        <Button\n                            className=\"btn\"\n                            onClick={handleReset}>Reset\n                    </Button>\n                    </div>\n                </DialogActions>\n            </div>\n        </Dialog>\n    );\n};\n\nexport default ResetMoviesDialogue;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { resetMovies } from '../../data/actions';\nimport Button from '../Button';\nimport Movie from '../Movie';\nimport ResetMoviesDialogue from '../Dialogues/ResetMoviesDialogue';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst MovieTable = ({ movies }) => {\n    const [open, setOpen] = useState(false);\n\n    // opens warning dialogue when user clicks reset movies\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    // closes warning dialogue when user clicks to reset or go back\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    // handles movie table reset functionality\n    const dispatch = useDispatch();\n\n    const handleReset = () => {\n        dispatch(resetMovies());\n        setOpen(false);\n    }\n\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        tableHeadCell: {\n            fontSize: \"1.1rem\",\n            fontWeight: \"bold\",\n            whiteSpace: \"nowrap\"\n        },\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles()\n\n    return (\n        <>\n            {console.log(movies)}\n            {movies.length ?\n                <>\n                    <ResetMoviesDialogue\n                        handleClose={handleClose}\n                        handleReset={handleReset}\n                        open={open}\n                    />\n                    <TableContainer\n                        component={Paper}\n                        className=\"movie-table__container\"\n                    >\n                        <Table size=\"small\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell\n                                        className={classes.tableHeadCell}\n                                        align=\"center\"\n                                    >Movie title\n                                    </TableCell>\n                                    <TableCell\n                                        className={classes.tableHeadCell}\n                                        align=\"center\"\n                                    >Director\n                                    </TableCell>\n                                    <TableCell\n                                        className={classes.tableHeadCell}\n                                        align=\"center\"\n                                    >Genre\n                                    </TableCell>\n                                    <TableCell\n                                        className={classes.tableHeadCell}\n                                        align=\"center\"\n                                    >Starring\n                                    </TableCell>\n                                    <TableCell></TableCell>\n                                    <TableCell></TableCell>\n                                    <TableCell></TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {movies.map((movie, i) => (\n                                    <Movie movie={movie} key={i} index={i} />\n                                ))}\n                            </TableBody>\n                        </Table>\n                        <div className=\"center mt-1\">\n                            <Button className=\"btn\" onClick={handleClickOpen}>Reset</Button>\n                        </div>\n                    </TableContainer>\n                </>\n                :\n                <h2 className=\"center movie-table__h2\">No movies! Add some by clicking the button above</h2>\n            }\n        </>\n    );\n}\n\nexport default MovieTable;","import { connect } from 'react-redux'\nimport MovieTable from './MovieTable'\n\nconst mapStateToProps = (state) => {\n    return {\n        movies: state.movies\n    }\n}\n\nexport default connect(mapStateToProps)(MovieTable);","import React from 'react';\nimport { FormControl, InputLabel, Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst MovieFormInput = ({ value, label, onChange, id, faIcon }) => {\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        marginBottom: {\n            marginBottom: \"1rem\"\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <FormControl>\n            <InputLabel htmlFor={id}>{label}<i className={faIcon}></i></InputLabel>\n            <Input\n                className={classes.marginBottom}\n                id={id}\n                value={value}\n                onChange={onChange}\n            />\n        </FormControl>\n    );\n};\n\nexport default MovieFormInput;","import React from 'react';\nimport { useImmerReducer } from 'use-immer';\nimport { useDispatch } from 'react-redux';\nimport { submitMovie } from '../../data/actions';\nimport Button from '../Button';\nimport Paper from '@material-ui/core/Paper';\nimport AlertDialogue from './AlertDialogue';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport MovieFormInput from '../MovieFormInput';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// mui's makestyles hook, allows for custom classnames in material ui components\nconst useStyles = makeStyles({\n    paper: {\n        backgroundColor: \"#cfe8fc\",\n        padding: \"1rem 1.5rem\",\n        marginBottom: \"1rem\",\n    }\n});\n\n// local reducer that handles updating local state properties (initialised in the initialState variable below)\nconst movieFormReducer = (draft, action) => {\n    switch (action.type) {\n        case 'fieldNameChange': {\n            draft[action.fieldName] = action.payload;\n            return\n        }\n        case 'warningDialogueOpen': {\n            draft.warningDialogueOpen = true;\n            return\n        }\n        case 'warningDialogueClose': {\n            draft.warningDialogueOpen = false;\n            return\n        }\n        case 'resetForm': {\n            draft.movieTitle = \"\";\n            draft.movieGenre = \"\";\n            draft.movieDirector = \"\";\n            draft.movieStarring = \"\";\n            return;\n        }\n        default: return;\n    }\n}\n\n// initial state of component\nconst initialState = {\n    movieTitle: \"\",\n    movieGenre: \"\",\n    movieDirector: \"\",\n    movieStarring: \"\",\n    warningDialogueOpen: false\n}\n\nconst MovieFormDialogue = ({ handleMovieFormClose, movieFormDialogueOpen }) => {\n    const [state, dispatch] = useImmerReducer(movieFormReducer, initialState);\n    const { movieTitle, movieGenre, movieDirector, movieStarring, warningDialogueOpen } = state;\n\n    // handles closing warning dialogue\n    const handleWarningDialogueClose = () => {\n        dispatch({ type: \"warningDialogueClose\" })\n    };\n\n    // handles form submission\n    const dispatchMovie = useDispatch();\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        // if user hasn't entered a movie title, warning dialogue shows informing them that they must\n        if (state.movieTitle === \"\") {\n            dispatch({ type: \"warningDialogueOpen\" })\n        } else {\n            const { movieTitle, movieGenre, movieDirector, movieStarring } = state;\n\n            // a movie object is made from the state properties, with an added 'watched' property that is initialised to false\n            let movie = {\n                movieTitle: movieTitle,\n                movieGenre: movieGenre,\n                movieDirector: movieDirector,\n                movieStarring: movieStarring,\n                watched: false\n            }\n\n            // dispatch user's form entries to reducer\n            dispatchMovie(submitMovie(movie));\n\n            // reset form after submission\n            dispatch({ type: \"resetForm\" })\n\n            // close dialogue once form is submitted\n            handleMovieFormClose()\n        }\n    }\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={movieFormDialogueOpen}\n            onClose={handleMovieFormClose}\n        >\n            <AlertDialogue\n                handleClose={handleWarningDialogueClose}\n                open={warningDialogueOpen}\n                dialogueHeading=\"No movie title\"\n                dialogueContent=\"Please enter a movie title to add a movie\"\n            />\n            <DialogContent>\n                <h1 className=\"center mf__h1\">Add a movie:</h1>\n                <Paper\n                    className={classes.paper}\n                    elevation={3}\n                >\n                    <form\n                        onSubmit={handleSubmit}\n                        className=\"mf__form\"\n                    >\n                        <MovieFormInput\n                            label=\"Movie title\"\n                            faIcon=\"fas fa-asterisk fa-1x mf-asterisk\"\n                            id=\"title\"\n                            value={movieTitle}\n                            onChange={e => dispatch({\n                                type: 'fieldNameChange',\n                                fieldName: 'movieTitle',\n                                payload: e.currentTarget.value,\n                            })}\n                        />\n\n                        <MovieFormInput\n                            label=\"Movie director\"\n                            id=\"director\"\n                            value={movieDirector}\n                            onChange={e => dispatch({\n                                type: 'fieldNameChange',\n                                fieldName: 'movieDirector',\n                                payload: e.currentTarget.value,\n                            })}\n                        />\n\n                        <MovieFormInput\n                            label=\"Movie genre\"\n                            id=\"genre\"\n                            value={movieGenre}\n                            onChange={e => dispatch({\n                                type: 'fieldNameChange',\n                                fieldName: 'movieGenre',\n                                payload: e.currentTarget.value,\n                            })}\n                        />\n\n                        <MovieFormInput\n                            label=\"Starring\"\n                            id=\"starring\"\n                            value={movieStarring}\n                            onChange={e => dispatch({\n                                type: 'fieldNameChange',\n                                fieldName: 'movieStarring',\n                                payload: e.currentTarget.value,\n                            })}\n                        />\n                        <small className=\"mf__small\">Please put a comma and space between starring names</small>\n                        <small className=\"mf__small\">*Required</small>\n                        <div className=\"center\">\n                            <Button className=\"btn\" onClick={handleSubmit}>Add movie</Button>\n                        </div>\n                    </form>\n                </Paper>\n            </DialogContent>\n        </Dialog >\n    );\n}\n\nexport default MovieFormDialogue;","import React from 'react';\nimport Header from './Header';\nimport Button from './Button';\nimport MovieTable from './MovieTable';\nimport MovieFormDialogue from './Dialogues/MovieFormDialogue';\nimport Container from '@material-ui/core/Container';\n\nconst MyMovies = () => {\n    const [open, setOpen] = React.useState(false);\n\n    // handles opening the add movie form dialogue\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    // handles closing the add movie form dialogue\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className=\"background-image\">\n            <Container width=\"70%\">\n                <Header>My Movies</Header>\n                <MovieFormDialogue handleMovieFormClose={handleClose} movieFormDialogueOpen={open} />\n                <div className=\"center\">\n                    <Button\n                        className=\"btn btn-secondary mt-1\"\n                        onClick={handleClickOpen}\n                    >Add a movie\n                    </Button>\n                </div>\n                <MovieTable />\n            </Container>\n        </div>\n    );\n};\n\nexport default MyMovies;","import React, { useState } from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Paper from '@material-ui/core/Paper';\nimport Collapse from '@material-ui/core/Collapse';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst FilterGroup = ({ heading, filtersNoDuplicates, onChange }) => {\n    const [showFilters, setShowFilters] = useState(false)\n    const [rotateChevron, setRotateChevron] = useState(false)\n\n    // handles showing and hiding filters and rotating chevron\n    const handleFilters = () => {\n        setShowFilters(!showFilters);\n        setRotateChevron(!rotateChevron);\n    }\n\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        paper: {\n            padding: \"1rem\"\n        },\n        roboto: {\n            fontFamily: \"Roboto, sans-serif\"\n        },\n        rotateChev: {\n            transform: rotateChevron ? \"rotate(180deg)\" : \"rotate(0)\",\n            transition: \"all 0.2s linear\"\n        },\n        flexColumn: {\n            flexDirection: \"column\"\n        },\n        marginLeft: {\n            marginLeft: \"0.3rem\"\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <div className=\"filters__group\">\n            <div className=\"filters__heading flex-align-center center\">\n                <h4>{heading}</h4>\n                <ExpandMoreIcon\n                    className={classes.rotateChev + \" filters__chevron\"}\n                    onClick={handleFilters}\n                />\n            </div>\n            {/* these conditions mean that nothing drops down unless the user has populated a filter group with at least one filter option */}\n            {filtersNoDuplicates[0] !== \"\" && filtersNoDuplicates.length > 0 &&\n                <Collapse in={showFilters}>\n                    <Paper elevation={4} className={classes.paper}>\n                        <div className={classes.flexColumn + \" flex-align-center center\"}>\n                            {filtersNoDuplicates.map((filter, i) => {\n                                return (\n                                    <div key={i} className=\"flex-align-center mb-1\">\n                                        <label className={classes.fontFamily} htmlFor=\"filter\">{filter}</label>\n                                        <input\n                                            id=\"filter\"\n                                            type=\"checkbox\"\n                                            value={filter}\n                                            onChange={onChange}\n                                            className={classes.marginLeft}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </Paper>\n                </Collapse>\n            }\n        </div>\n    );\n};\n\nexport default FilterGroup;","import React from 'react';\nimport Button from '../../Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst PickedMovieDialogue = ({ handleClose, open, pickedMovie }) => {\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        paper: {\n            backgroundColor: \"#cfe8fc\",\n        },\n        berp: {\n            justifyContent: \"center\"\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n        >\n            <div className=\"dialogue__container\">\n                <h1 className=\"dialogue__heading\">Your movie</h1>\n                <DialogContent >\n                    <Paper\n                        classes={{ root: classes.paper }}\n                        className=\"paper\"\n                        elevation={3}\n                    >\n                        <h1 className=\"picked-movie__h1\">{pickedMovie.movieTitle}</h1>\n                        {pickedMovie.movieDirector !== \"\"\n                            ?\n                            <p className=\"picked-movie__director\">Director: {pickedMovie.movieDirector}</p>\n                            :\n                            null\n                        }\n\n                    </Paper>\n                </DialogContent>\n                <DialogActions className={classes.berp}>\n                    <Button\n                        className=\"btn btn-secondary\"\n                        onClick={handleClose}>Choose again\n                </Button>\n                </DialogActions>\n            </div>\n        </Dialog>\n    );\n};\n\nexport default PickedMovieDialogue;","import { connect } from \"react-redux\";\nimport PickedMovieDialogue from \"./PickedMovieDialogue\"\n\nconst mapStateToProps = state => {\n    return {\n        pickedMovie: state.pickedMovie\n    };\n};\n\nexport default connect(mapStateToProps)(PickedMovieDialogue);","import React from 'react';\nimport Button from '../Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst NoMoviesDialogue = ({ handleClose, open }) => {\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        paper: {\n            backgroundColor: \"#cfe8fc\",\n        },\n        paddingNone: {\n            padding: \"0\"\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n        >\n            <div className=\"dialogue__container\">\n                <h1 className=\"dialogue__heading\">No movies!</h1>\n                <DialogContent>\n                    <Paper\n                        className={classes.paper + \" paper\"}\n                        elevation={3}\n                    >\n                        <h3 className=\"no-movies__h3\">There are no movies matching your search criteria. Please change your filters or add a movie that matches them.</h3>\n                    </Paper>\n                </DialogContent>\n                <DialogActions className={classes.paddingNone}>\n                    <Button\n                        className=\"btn\"\n                        onClick={handleClose}>Back\n                </Button>\n                </DialogActions>\n            </div>\n        </Dialog>\n    );\n};\n\nexport default NoMoviesDialogue;","import React, { Component } from 'react';\nimport Header from \"../Header\";\nimport Button from '../Button';\nimport FilterGroup from \"../FilterGroup\";\nimport PickedMovieDialogue from \"../Dialogues/PickedMovieDialogue\";\nimport NoMoviesDialogue from \"../Dialogues/NoMoviesDialogue\";\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport { randomFilteredMovie } from '../../functions/randomFilteredMovie'\nimport { withStyles } from \"@material-ui/core/styles\";\n\n// styles object that stores classes, gets passed through mui's withstyles higher order component (see export at the bottom). Allows custom classes to be added to mui components\nconst styles = {\n    paper: {\n        overflowX: \"auto\"\n    },\n    spaceAround: {\n        width: \"100%\",\n        justifyContent: \"space-around\"\n    },\n    roboto: {\n        fontFamily: \"Roboto, sans-serif\"\n    },\n    marginLeft: {\n        marginLeft: \"0.3rem\"\n    }\n};\n\nclass MoviePicker extends Component {\n    constructor(props) {\n        super(props);\n\n        // the filters array here stores all of the filters the user ticks when picking a movie\n        this.state = {\n            filters: [],\n            movieDialogueOpen: false,\n            warningDialogueOpen: false,\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handlePickMovie = this.handlePickMovie.bind(this);\n        this.handleMovieDialogueOpen = this.handleMovieDialogueOpen.bind(this);\n        this.handleMovieDialogueClose = this.handleMovieDialogueClose.bind(this);\n        this.handleWarningDialogueOpen = this.handleWarningDialogueOpen.bind(this);\n        this.handleWarningDialogueClose = this.handleWarningDialogueClose.bind(this);\n    }\n\n    // opens the dialogue containing the picked movie\n    handleMovieDialogueOpen() {\n        this.setState({\n            movieDialogueOpen: true,\n        });\n    };\n\n    // closes the dialogue containing the picked movie\n    handleMovieDialogueClose() {\n        this.setState({\n            movieDialogueOpen: false,\n        });\n    };\n\n    // this function shows the warning (no movies match criteria) dialogue\n    handleWarningDialogueOpen() {\n        this.setState({ warningDialogueOpen: true });\n    };\n\n    // closes the warning (no movies match criteria) dialogue\n    handleWarningDialogueClose() {\n        this.setState({ warningDialogueOpen: false });\n    };\n\n    // this function adds or removes a filter requirement from the filters array depending on whether the user is checking or unchecking it\n    handleChange(e) {\n        let filterItem = e.target.value\n\n        if (this.state.filters.indexOf(filterItem) === -1) {\n            this.setState({\n                filters: [...this.state.filters, filterItem]\n            })\n        } else if (this.state.filters.indexOf(filterItem) > -1) {\n            this.setState({\n                filters: this.state.filters.filter(filter => {\n                    return filter !== filterItem\n                })\n            })\n        }\n    }\n\n    // as the 'watched' property for each movie is a boolean, this function is necessary to compare whether the boolean exists in the filters array (whether the user is filtering by watched or unwatched movies)\n    handleWatched(bool) {\n        if (this.state.filters.indexOf(bool) === -1) {\n            this.setState({\n                filters: [...this.state.filters, bool]\n            })\n        } else if (this.state.filters.indexOf(bool) > -1) {\n            this.setState({\n                filters: this.state.filters.filter(filter => {\n                    return filter !== bool\n                })\n            })\n        }\n    }\n\n    // handles picking a random movie with or without filter requirements\n    handlePickMovie() {\n        let { filters } = this.state\n        let { movies } = this.props\n\n        let pickedMovie = {}\n\n        // if there are filter requirements, pick a random movie based on them, else just pick a random movie \n        if (filters.length) {\n            pickedMovie = randomFilteredMovie(filters, movies)\n        } else {\n            pickedMovie = movies[Math.floor(Math.random() * movies.length)]\n        }\n\n        // dispatches picked movie to reducer \n        this.props.handlePickedMovie(pickedMovie)\n\n        // if user has watched all movies but filters by unwatched (or vice versa), error dialogue will show\n        pickedMovie === undefined ? this.handleWarningDialogueOpen() : this.handleMovieDialogueOpen()\n    }\n\n    render() {\n        const { movieDialogueOpen, warningDialogueOpen } = this.state\n        const { movies, classes } = this.props\n\n        // the new sets in these variables remove duplicate filters, so each filter is only listed once\n        const directorsNoDuplicates = [...new Set(movies.map(movie => movie.movieDirector))];\n        const genresNoDuplicates = [...new Set(movies.map(movie => movie.movieGenre))];\n        // this flattens the array of starring arrays into one array\n        const starringNoDuplicates = [...new Set(movies.map(movie => movie.movieStarring.split(', ')).flat())];\n\n        return (\n            <div className=\"background-image\">\n                <Container width=\"70%\">\n                    <PickedMovieDialogue handleClose={this.handleMovieDialogueClose} open={movieDialogueOpen} />\n                    <NoMoviesDialogue handleClose={this.handleWarningDialogueClose} open={warningDialogueOpen} />\n                    <Header>Movie Picker</Header>\n                    <h3 className=\"center mp__h3\">Pick a random movie from your movies, with or without filters</h3>\n                    <Paper className={classes.overflowX} elevation={4}>\n                        <div className=\"filters__container\">\n                            <div className=\"filters\">\n\n                                {/* directors filter group */}\n                                <FilterGroup\n                                    heading=\"Directors\"\n                                    filtersNoDuplicates={directorsNoDuplicates}\n                                    onChange={(e) => this.handleChange(e)}\n                                />\n\n                                {/* genres filter group */}\n                                <FilterGroup\n                                    heading=\"Genres\"\n                                    filtersNoDuplicates={genresNoDuplicates}\n                                    onChange={(e) => this.handleChange(e)}\n                                />\n\n                                {/* starring filters group */}\n                                <FilterGroup\n                                    heading=\"Starring\"\n                                    filtersNoDuplicates={starringNoDuplicates}\n                                    onChange={(e) => this.handleChange(e)}\n                                />\n\n                                {/* watched before filters group */}\n                                <div className=\"filters__group filters__group-watched-before\">\n                                    <h4 className=\"filters__heading\">Watched before</h4>\n                                    <div\n                                        className={classes.spaceAround + \" flex-align-center\"}\n                                    >\n                                        <div className=\"flex-align-center filters__watched-checkbox\">\n                                            <label className={classes.roboto} htmlFor=\"yes\">Yes</label>\n                                            <input\n                                                id=\"yes\"\n                                                type=\"checkbox\"\n                                                onChange={() => this.handleWatched(true)}\n                                                className={classes.marginLeft}\n                                            />\n                                        </div>\n                                        <div className=\"flex-align-center filters__watched-checkbox\">\n                                            <label className={classes.roboto} htmlFor=\"no\">No</label>\n                                            <input\n                                                id=\"no\"\n                                                type=\"checkbox\"\n                                                onChange={() => this.handleWatched(false)}\n                                                className={classes.marginLeft}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"center mt-1\" >\n                                <Button className=\"btn\" onClick={this.handlePickMovie}>Pick movie</Button>\n                            </div>\n                        </div>\n                    </Paper>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(MoviePicker);","export const randomFilteredMovie = (filters, movies) => {\n\n    // this reducer checks if at least one value of each movie object is included in the filters array. The movieStarring property of each movie, initially a string, is split into an array which can then also be looped through. If a movie's genre or director or is in the filters array, or if the movie contains a star that is in there, then the movie object is added to the accumulator array.\n    let filteredMovies = movies.reduce((acc, movie) => {\n        if (\n            Object.values(movie).some(val => filters.includes(val))\n            ||\n            movie.movieStarring.split(', ').some(star => filters.includes(star))\n        ) {\n            return [...acc, movie]\n        }\n        return acc\n    }, [])\n\n    // returns a random index of the new array of movie objects \n    return filteredMovies[Math.floor(Math.random() * filteredMovies.length)]\n}","import { connect } from \"react-redux\";\nimport MoviePicker from \"./MoviePicker\"\nimport { savePickedMovie } from \"../../data/actions\";\n\nconst mapStateToProps = state => {\n    return {\n        movies: state.movies\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handlePickedMovie: pickedMovie => dispatch(savePickedMovie((pickedMovie)))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviePicker);","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst FourOhFour = () => {\n    // mui's makestyles hook, allows for custom classnames in material ui components\n    const useStyles = makeStyles({\n        h1: {\n            textAlign: \"center\",\n            fontSize: \"5rem\",\n            marginBottom: \"2rem\"\n        }\n    });\n\n    // storing custom classes in classes variable\n    const classes = useStyles();\n\n    return (\n        <div className=\"background-image\">\n            <div className=\"lp__container\">\n                <h1 className={classes.h1}>Oops, page not found</h1>\n                <Link className=\"btn btn-secondary\" to=\"/\">Home</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default FourOhFour;","import React from 'react';\nimport LandingPage from \"./LandingPage\";\nimport MyMovies from \"./MyMovies\";\nimport MoviePicker from \"./MoviePicker\";\nimport FourOhFour from \"./FourOhFour\";\n\nimport {\n  HashRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nconst App = () => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={LandingPage} />\n      <Route path=\"/my-movies\" component={MyMovies} />\n      <Route path=\"/movie-picker\" component={MoviePicker} />\n      <FourOhFour />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","const initial = {\n    movies: [],\n    pickedMovie: {}\n}\n\nexport default initial;","import initial from \"./initial\";\n\n// adds submitted movies to movies array in initial state\nconst submitMovie = (state, action) => {\n    return {\n        ...state,\n        movies: [...state.movies, action.movie]\n    }\n}\n\n// deletes specific movie from user's movie table\nconst deleteMovie = (state, action) => {\n    return {\n        ...state,\n        movies: state.movies.filter((_, index) => {\n            return index !== action.index\n        })\n    }\n}\n\n// updates a movie's details\nconst updateMovie = (state, { updatedMovie, index }) => {\n    return {\n        ...state,\n        movies: state.movies.map((movie, i) => i === index ? updatedMovie : movie)\n    }\n}\n\n// updates a movie's watched property to opposite boolean\nconst updateWatched = (state, { index }) => {\n    return {\n        ...state,\n        movies: state.movies.map((movie, i) => i === index ? { ...movie, watched: !movie.watched } : movie)\n    }\n}\n\n// resets user's movie table\nconst resetMovies = () => {\n    return {\n        ...initial\n    }\n}\n\n// saves randomly picked movie to global state so it can then be rendered in the picked movie dialogue\nconst savePickedMovie = (state, action) => {\n    return {\n        ...state,\n        pickedMovie: { ...action.pickedMovie }\n    }\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"submitMovie\": return submitMovie(state, action);\n        case \"deleteMovie\": return deleteMovie(state, action);\n        case \"updateMovie\": return updateMovie(state, action);\n        case \"updateWatched\": return updateWatched(state, action);\n        case \"resetMovies\": return resetMovies(state, action);\n        case \"savePickedMovie\": return savePickedMovie(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;","import { createStore, compose } from \"redux\";\nimport reducer from \"./reducer\";\nimport initial from \"./initial\";\nimport persistState from \"redux-localstorage\";\n\nconst composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer,\n    initial,\n    composeEnhancers(persistState())\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './css/index.css';\n\n// provider and store\nimport { Provider } from \"react-redux\";\nimport store from \"./data/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}